# 记录操作记录对组件 实现恢复撤销的功能
# 定义方法 开始记录 提交记录 恢复记录 撤销记录 加入操作记录

# 数据结构 =

数据结构 = [
    {
        "操作类型": "创建组件",
        "组件id": "按钮1",
    }
]


class 历史记录类(object):
    历史记录缓冲区 = []
    当前记录位置 = 1
    生效历史记录 = []
    撤销的记录 = []

    def __init__(self):
        pass

    def 开始记录(self):
        self.历史记录缓冲区 = []
        self.撤销的记录 = []

    def 提交记录(self):
        self.生效历史记录.append(
            self.历史记录缓冲区
        )
        self.历史记录缓冲区 = []
        self.当前记录位置 += 1

    def 添加(self, 操作类型, 传递数据, 开始函数, 撤销函数):
        传递数据 = 开始函数( 传递数据)
        self.历史记录缓冲区.append({
            "操作类型": 操作类型,
            "传递数据": 传递数据,
            "当前记录位置": self.当前记录位置,
            "开始函数": 开始函数,
            "撤销函数": 撤销函数,
        })
        return 传递数据

    def 撤销记录(self):
        pass
        if len(self.生效历史记录) == 0: return

        print("撤销记录")

        # print("--------------------撤销记录", self.当前记录位置)
        操作组 = self.生效历史记录.pop()
        self.撤销的记录.append(操作组)
        # print(数据)
        self.打印当前记录()
        self.当前记录位置 -= 1

        for 数据 in 操作组:
            数据['撤销函数'](数据['传递数据'])

    def 恢复记录(self):
        pass
        print("恢复记录")
        if len(self.撤销的记录) == 0: return

        操作组 = self.撤销的记录.pop()
        self.生效历史记录.append(操作组)
        # print(数据)
        self.打印当前记录()
        self.当前记录位置 += 1
        for 数据 in 操作组:
            数据['开始函数']( 数据['传递数据'])

    def 打印当前记录(self):
        return
        # print("--------------------当前记录位置", self.当前记录位置)
        print("=====================================")
        print("--------------------历史数据_生效")
        for 数据 in self.生效历史记录:
            print(数据)
        print("--------------------历史数据_撤销")
        for 数据 in self.撤销的记录:
            print(数据)
        print("=====================================")


if __name__ == "__main__":
    历史记录 = 历史记录类()
    历史记录.开始记录()


    def 函数创建按钮(是否为第一次, 传递数据):
        if 是否为第一次:
            print("函数创建按钮", 传递数据)
            # 这里写创建按钮的代码 把按钮对象传递出去
        else:
            print("恢复按钮", 传递数据)
            # 这里写删除按钮的代码
        return 传递数据

    def 函数删除按钮(传递数据):
        print("函数删除按钮", 传递数据)
        # 删除按钮的代码
        return 传递数据


    历史记录.添加("创建组件", "按钮1", 函数创建按钮, 函数删除按钮)
    历史记录.提交记录()
    #
    # 历史记录.开始记录()
    # 历史记录.添加("创建组件", "按钮2")
    # 历史记录.提交记录()
    #
    # 历史记录.开始记录()
    # 历史记录.添加("创建组件", "按钮3")
    # 历史记录.提交记录()
    #

    # 历史记录.打印当前记录()

    历史记录.撤销记录()
    # 历史记录.撤销记录()
    # 历史记录.撤销记录()
    #
    # 历史记录.开始记录()
    # 历史记录.添加("创建组件", "按钮3")
    # 历史记录.提交记录()
    #
    # 历史记录.恢复记录()
    # 历史记录.恢复记录()
    历史记录.恢复记录()

    # 历史记录.打印当前记录()
